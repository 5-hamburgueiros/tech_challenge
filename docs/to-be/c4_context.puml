@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons
!define FONTAWESOME https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/font-awesome-5
!include DEVICONS/react.puml
!include DEVICONS/nodejs.puml
!include DEVICONS/database.puml
!include FONTAWESOME/users.puml


Person(user, "Atentende", "Pessoa que utliza o sistema para inputar pedidos", $sprite="users")
' Container(spa, "SPA", "reactjs", "Aplicação front-end", $sprite="react")

Boundary(aws, "AWS", "EKS") {
' System_Boundary(tech_challenge, "Tech Challenge") {
  System(pedido_api, "Pedidos", "Disponibiliza endpoints para manipulação de recursos da API de pedidos")
  System(menu, "Menu", "Disponibiliza endpoints para manipulação de recursos da API de ingredientes, itens e combos")
  System(payment, "Payment", "Disponibiliza endpoints para manipulação de recursos da API de pagamentos")
  System(observability, "Observabilidade", "Observa e monitora os recursos da aplicação"  )
  SystemQueue(rabbit, "RabbitMQ", "Fila de mensagens para comunicação entre serviços")
  ' Container(api, "API", "nodejs", "Disponibiliza endpoints para manipulação de recursos", $sprite="nodejs")
  ' ContainerDb(db, "DB", "Postgres SQL", "Armazena dados de ingredientes, itens, combos e pedidos", $sprite="database")
}
' System_Boundary(payment_gateway, "Gateway de Pagamentos") {
  System_Ext(payment_Gateway, "Mercado Pago", "Disponibliza api de criação de pagamentos",)
' }

Rel(user, pedido_api, "Utiliza", "https")
Rel(pedido_api, menu, "Utiliza", "https")

Rel(pedido_api, observability, "Utiliza", "https")
Rel(payment, observability, "Utiliza", "https")
Rel(menu, observability, "Utiliza", "https")

Rel(pedido_api, rabbit, "Utiliza", "https")
Rel(payment, rabbit, "Utiliza", "https")
Rel(menu, rabbit, "Utiliza", "https")

BiRel(pedido_api, payment_Gateway, "Utiliza", "https")
@enduml
